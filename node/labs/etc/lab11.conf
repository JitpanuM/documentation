nodes = {
	rtds_gtnet1 = {
		type = "socket",
		layer = "udp",
		header = "gtnet-skt",

		local = "*:12000",
		remote = "134.130.169.89:12000"
	},
	rtds_gtnet2 = {
		type = "socket",
		layer = "udp",
		header = "gtnet-skt",

		local = "*:12001",
		remote = "134.130.169.90:12001"
	},
	monitoring = {
		type = "websocket"
	},
	monitoring_log = {
		type = "file",

		out = {
			uri = "ftp://acs:fake@134.130.169.32/var/villas/log/monitoring_%Y-%m-%d_%H_%M_%S.dat"
		}
	}
}

paths = [
	{
		# Combine data from rtds_gtnet1 and rtds_gtnet2
		in = [
			"rtds_gtnet1.hdr.ts.origin",
			"rtds_gtnet1.hdr.sequence",
			"rtds_gtnet1.data[0-6]",

			"rtds_gtnet2.hdr.ts.origin",
			"rtds_gtnet2.hdr.sequence",
			"rtds_gtnet2.data[0-6]",
		];

		out = [
			"monitoring",
			"monitoring_log"
		];

		reverse = true,

		# Send new samples to the outgoing nodes
		# whenever one of the source nodes sends
		# an update.
		register = "any",

		# Send new samples to the outgoing nodes
		# whenenver node 'rtds_gtnet1' sends an update
		#register = "node:rtds_gtnet1";

		# Send new samples to the outgoing nodes
		# at a fixed rate of 100 Hz
		#register = "rate:100"

		hooks = (
			# We dont want to overload the WebBrowsers
			{ type = "decimate", ratio = 10 }
		)
	}
]
